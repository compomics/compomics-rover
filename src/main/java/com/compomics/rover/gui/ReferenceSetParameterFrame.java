package com.compomics.rover.gui;

import com.compomics.rover.general.singelton.QuantitativeValidationSingelton;
import com.compomics.rover.general.quantitation.ReferenceSet;
import com.compomics.rover.general.quantitation.QuantitativeProtein;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.ArrayList;

/**
 * Created by IntelliJ IDEA.
 * User: niklaas
 * Date: 26-mrt-2009
 * Time: 13:09:58
 */
public class ReferenceSetParameterFrame extends JFrame {
    private JPanel jpanContent;
    private JRadioButton useAllProteinsRadioButton;
    private JRadioButton useMostAbundantProteinsRadioButton;
    private JSpinner spinner1;
    private JCheckBox checkBox1;
    private JButton createReferenceSetButton;
    /**
     * This validation singelton holds information for the calculation of the ratio
     */
    private QuantitativeValidationSingelton iQuantitativeValidationSingelton = QuantitativeValidationSingelton.getInstance();
    /**
     * All the proteins
     */
    private QuantitativeProtein[] iProteins;
    /**
     * The parent frame
     */
    private QuantitationValidationGUI iParent;

    public ReferenceSetParameterFrame(QuantitativeProtein[] aProteins, QuantitationValidationGUI aParent) {
        this.iProteins = aProteins;
        this.iParent = aParent;


        $$$setupUI$$$();

        //set the checbox selected
        checkBox1.setSelected(iQuantitativeValidationSingelton.isRatioValidInReferenceSet());
        //set the use all proteins selected
        if (iQuantitativeValidationSingelton.getUseAllProteinsForReferenceSet()) {
            useAllProteinsRadioButton.setSelected(true);
        } else {
            useMostAbundantProteinsRadioButton.setSelected(true);
        }
        //set the number of proteins to use
        spinner1.setValue(iQuantitativeValidationSingelton.getNumberOfProteinsInReferenceSet());

        this.setTitle("Reference set parameters");
        this.setContentPane(jpanContent);
        this.pack();
        this.setLocation(400, 400);
        this.setVisible(true);
        createReferenceSetButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //set the changed things
                iQuantitativeValidationSingelton.setNumberOfProteinsInReferenceSet((Integer) spinner1.getValue());
                iQuantitativeValidationSingelton.setUseOnlyValidRatioForProteinMean(checkBox1.isSelected());
                iQuantitativeValidationSingelton.setUseAllProteinsForReferenceSet(useAllProteinsRadioButton.isSelected());

                //create a reference set
                ReferenceSet lReferenceSet = new ReferenceSet(new ArrayList<QuantitativeProtein>(), iQuantitativeValidationSingelton.getReferenceSet().getTypes(), iQuantitativeValidationSingelton.getReferenceSet().getComponents());

                int lReferenceSetSize = iQuantitativeValidationSingelton.getNumberOfProteinsInReferenceSet();
                if (iQuantitativeValidationSingelton.getUseAllProteinsForReferenceSet()) {
                    lReferenceSetSize = iProteins.length;
                }
                for (int i = 0; i < lReferenceSetSize; i++) {
                    lReferenceSet.addReferenceProtein(iProteins[i]);
                }
                iQuantitativeValidationSingelton.setReferenceSet(lReferenceSet);
                iParent.loadProtein(false);
                //close
                setVisible(false);
                dispose();
            }
        });
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        jpanContent = new JPanel();
        jpanContent.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Select a number of proteins to build the reference set");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(label1, gbc);
        useAllProteinsRadioButton = new JRadioButton();
        useAllProteinsRadioButton.setSelected(true);
        useAllProteinsRadioButton.setText("Use all proteins");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(useAllProteinsRadioButton, gbc);
        useMostAbundantProteinsRadioButton = new JRadioButton();
        useMostAbundantProteinsRadioButton.setText("Use most abundant proteins");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(useMostAbundantProteinsRadioButton, gbc);
        spinner1 = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(spinner1, gbc);
        final JLabel label2 = new JLabel();
        label2.setFont(new Font("Tahoma", label2.getFont().getStyle(), label2.getFont().getSize()));
        label2.setText("Ratios from the reference proteins must be true");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(label2, gbc);
        checkBox1 = new JCheckBox();
        checkBox1.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(checkBox1, gbc);
        createReferenceSetButton = new JButton();
        createReferenceSetButton.setText("Create reference set");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        jpanContent.add(createReferenceSetButton, gbc);
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(useAllProteinsRadioButton);
        buttonGroup.add(useMostAbundantProteinsRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return jpanContent;
    }
}
